adc=add with carry
addw=16-bit add
and=and
and1=1-bit and
asl=arithmetic shift left
bbc=branch if bit clear
bbs=branch if bit set
bcc=branch if carry bit clear
bcs=branch if carry bit set
beq=branch if equal
bit=bit test A with memory
bmi=branch if minus
bne=branch if not equal
bpl=branch if plus
bra=branch always
brk=break
bvc=branch if overflow bit clear
bvs=branch if overflow bit set
call=call
cbne=compare and branch if not equal
clr=clear
clr1=1-bit clear
clrc=clear C-flag
clrg=clear G-flag
clrv=clear V-flag
cmp=compare
cmpw=16-bit compare
com=1's complement
dbne=decrement and branch if not equal
dec=decrement
decw=16-bit decrement
di=disable interrupt
div=divide
ei=enable interrupt
eor=exclusive or
eor1=16-bit exclusive
inc=increment
incw=16-bit increment
jmp=jump
ld=load
ldc=load C-flag
lsr=Arithmetic shift right
mul=multiply
nop=no operation
not1=1-bit not
or=or
or1=1-bit or
pcall=page call
pop=pop
push=push
ret=return
reti=return from interrupt
rol=rotate left
ror=rotate right
sbc=subtract with carry
set=set
set1=1-bit set
setc=set C-flag
setg=set G-flag
st=store
st1=1-bit store
stop=stop
subw=16-bit subtract
tax=transfer A to X
tay=transfer A to Y
tcall=table call
tclr=test and clear bits with A
tset=test and set bits with A
tspx=transfer SP to X
tst=test memory for negative or zero
txa=transfer X to A
txsp=transfer X to SP
tya=transfer Y to A
xax=exchange X with A
xay=exchange X with Y
xcn=exchange nibbles within A
xma=exchange memory with A
xyx=exchange Y with X
nop0=possible undocumented nop used for padding
